{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Translate Room schemas to Database Markup Language (DBML) . Once you have a JSON representation of your Room exported schema , you can use FloorPlan to transform it into a DBML representation, to then be checked-in back into the repository or used as source for rendering through user interface. dbdiagram is a free, simple tool to draw ER diagrams, that can be used to render the output of FloorPlan. For instance, when translating Tivi 's schema (v26) , this is the rendered output in dbdiagram: Note FloorPlan and its developers are in no way associated to dbdiagram.","title":"Overview"},{"location":"run/","text":"Run FloorPlan After checking out this repository, make sure you have Gradle installed and run: gradlew run --args=\"<path-to-schema-file>\" Command-line arguments Write output to file gradlew run --args=\"<path-to-schema-file> --output=<path-to-output-file>\" Add CREATION SQL as Table note This option is disabled by default since it can be quite verbose and would 'duplicate' what a UI rendering tool (better) provides. Opt-in by specifying: gradlew run --args=\"<path-to-schema-file> --creation-sql-as-table-note\" Render nullable fields in data types This option is disabled by default , opt-in with: gradlew run --args=\"<path-to-schema-file> --render-nullable-fields\"","title":"Introduction"},{"location":"run/#run-floorplan","text":"After checking out this repository, make sure you have Gradle installed and run: gradlew run --args=\"<path-to-schema-file>\"","title":"Run FloorPlan"},{"location":"run/#command-line-arguments","text":"","title":"Command-line arguments"},{"location":"run/#write-output-to-file","text":"gradlew run --args=\"<path-to-schema-file> --output=<path-to-output-file>\"","title":"Write output to file"},{"location":"run/#add-creation-sql-as-table-note","text":"This option is disabled by default since it can be quite verbose and would 'duplicate' what a UI rendering tool (better) provides. Opt-in by specifying: gradlew run --args=\"<path-to-schema-file> --creation-sql-as-table-note\"","title":"Add CREATION SQL as Table note"},{"location":"run/#render-nullable-fields-in-data-types","text":"This option is disabled by default , opt-in with: gradlew run --args=\"<path-to-schema-file> --render-nullable-fields\"","title":"Render nullable fields in data types"},{"location":"tests/","text":"Tests The project is unit tested. These can be run via Gradle with: gradlew test","title":"Testing"},{"location":"tests/#tests","text":"The project is unit tested. These can be run via Gradle with: gradlew test","title":"Tests"}]}